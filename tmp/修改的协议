

//协议修改


-#define PROTO_OK					0x10    // INSYNC/OK      - 'ok' response
-#define PROTO_FAILED				0x11    // INSYNC/FAILED  - 'fail' response
-#define PROTO_INVALID				0x13	// INSYNC/INVALID - 'invalid' response for bad commands
+#define PROTO_OK					0x40    // INSYNC/OK      - 'ok' response
+#define PROTO_FAILED				0x41    // INSYNC/FAILED  - 'fail' response
+#define PROTO_INVALID				0x43	// INSYNC/INVALID - 'invalid' response for bad commands
 #define PROTO_BAD_SILICON_REV 		0x14 	// On the F4 series there is an issue with < Rev 3 silicon
 // see https://pixhawk.org/help/errata
 // Command bytes

 修改： 0x1x->0x4x

-#define PROTO_GET_SYNC				0x21    // NOP for re-establishing sync
-#define PROTO_GET_DEVICE			0x22    // get device ID bytes
-#define PROTO_CHIP_ERASE			0x23    // erase program area and reset program address
-#define PROTO_PROG_MULTI			0x27    // write bytes at program address and increment
-#define PROTO_GET_CRC				0x29	// compute & return a CRC

+#define PROTO_GET_SYNC				0x51    // NOP for re-establishing sync
+#define PROTO_GET_DEVICE			0x52    // get device ID bytes
+#define PROTO_CHIP_ERASE			0x53    // erase program area and reset program address
+#define PROTO_PROG_MULTI			0x57    // write bytes at program address and increment
+#define PROTO_GET_CRC				0x59	// compute & return a CRC

 修改： 0x2x->0x5x

 #define PROTO_GET_OTP				0x2a	// read a byte from OTP at the given address
 #define PROTO_GET_SN				0x2b    // read a word from UDID area ( Serial)  at the given address
 #define PROTO_GET_CHIP				0x2c    // read chip version (MCU IDCODE)
 #define PROTO_SET_DELAY				0x2d    // set minimum boot delay
 #define PROTO_GET_CHIP_DES			0x2e    // read chip version In ASCII

-#define PROTO_BOOT					0x30    // boot the application
-#define PROTO_DEBUG					0x31    // emit debug information - format not defined
+#define PROTO_BOOT					0x60    // boot the application
+#define PROTO_DEBUG					0x61    // emit debug information - format not defined


 修改： 0x3x->0x6x